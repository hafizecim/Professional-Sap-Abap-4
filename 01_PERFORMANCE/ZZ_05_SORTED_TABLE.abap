*--------------------------------------------------------------------*
* Program: ZZ_05_SORTED_TABLE_DETAILED
* AmaÃ§   : ABAP'ta Sorted Table kullanÄ±mÄ±nÄ± ve mantÄ±ÄŸÄ±nÄ± Ã¶ÄŸretmek
* AÃ§Ä±klama:
* - Sorted Table nedir, ne zaman kullanÄ±lÄ±r, avantajlarÄ± nelerdir
* - READ TABLE ve Binary Search mantÄ±ÄŸÄ±
* - Nested Loop ve Parallel Cursor ile performans optimizasyonu
*--------------------------------------------------------------------*

REPORT ZZ_05_SORTED_TABLE_DETAILED.

*--------------------------------------------------------------------*
* ğŸ”¹ Sorted Table Nedir?
*--------------------------------------------------------------------*
* Sorted Table, ABAP iÃ§indeki internal tablolarÄ±n Ã¶zel bir tÃ¼rÃ¼dÃ¼r.
* - Veriler, belirlenen alanlara gÃ¶re sÃ¼rekli sÄ±ralÄ± tutulur.
* - Internal tablodaki veri ekleme, deÄŸiÅŸtirme veya silme iÅŸlemleri sÄ±rasÄ±nda ABAP sÄ±ralamayÄ± otomatik saÄŸlar.
* - Bu sayede tablo Ã¼zerinde yapÄ±lan aramalar (READ TABLE) Ã§ok hÄ±zlÄ± olur.
* - Binary Search (ikili arama) algoritmasÄ± Sorted Table'larda otomatik Ã§alÄ±ÅŸÄ±r.
*--------------------------------------------------------------------*

*--------------------------------------------------------------------*
* ğŸ”¹ AvantajlarÄ±:
*--------------------------------------------------------------------*
* 1. HÄ±zlÄ± veri eriÅŸimi: READ TABLE BINARY SEARCH komutu olmadan ikili arama yapabilir.
* 2. Performans: Ã‡ok bÃ¼yÃ¼k internal tablolarda dÃ¶ngÃ¼leri optimize eder.
* 3. Tekil veya tekrar eden anahtarlarla veri yÃ¶netimi: 
*    - UNIQUE KEY: AynÄ± anahtara sahip ikinci kayÄ±t eklenemez.
*    - NON-UNIQUE KEY: AynÄ± anahtara sahip birden fazla kayÄ±t eklenebilir.
*--------------------------------------------------------------------*

*--------------------------------------------------------------------*
* ğŸ”¹ Ne Zaman KullanÄ±lÄ±r?
*--------------------------------------------------------------------*
* 1. EÄŸer internal tablodan tek bir kayÄ±t arayacaksanÄ±z
*    - READ TABLE ile sorgulama yapÄ±lÄ±r, Binary Search otomatik Ã§alÄ±ÅŸÄ±r.
*    - WITH TABLE KEY kullanÄ±lÄ±r. BINARY SEARCH yazmaya gerek yoktur.
* 2. EÄŸer internal tablodan birden fazla kayÄ±t veya iÃ§ iÃ§e dÃ¶ngÃ¼ ile okuma yapacaksanÄ±z
*    - Sorted Table kullanmak performansÄ± artÄ±rÄ±r.
*    - Parallel Cursor algoritmasÄ± ile iki tabloyu eÅŸleÅŸtirip performanslÄ± ÅŸekilde okuyabilirsiniz.
*--------------------------------------------------------------------*

*--------------------------------------------------------------------*
* ğŸ”¹ Sorted Table TanÄ±mlama Ã–rnekleri
*--------------------------------------------------------------------*
* UNIQUE KEY: AynÄ± anahtara sahip ikinci kayÄ±t eklenemez
DATA: ITAB_SORTED_UNIQUE TYPE SORTED TABLE OF BKPF_TAB
      WITH UNIQUE KEY BUKRS BELNR GJAHR.

* NON-UNIQUE KEY: AynÄ± anahtara sahip birden fazla kayÄ±t olabilir
DATA: ITAB_SORTED_NONUNIQUE TYPE SORTED TABLE OF BKPF_TAB
      WITH NON-UNIQUE KEY BUKRS BELNR GJAHR.

*--------------------------------------------------------------------*
* ğŸ”¹ READ TABLE KullanÄ±mÄ±
*--------------------------------------------------------------------*
* Sorted Table ile tek bir satÄ±r okumak iÃ§in:
* READ TABLE ITAB_SORTED_UNIQUE
*   WITH TABLE KEY BUKRS = '1000'
*                  BELNR = '0001'
*                  GJAHR = '2025'. " BINARY SEARCH yazÄ±lmaz
*--------------------------------------------------------------------*

*--------------------------------------------------------------------*
* ğŸ”¹ Nested Loop ve Parallel Cursor
*--------------------------------------------------------------------*
* Ä°Ã§ iÃ§e dÃ¶ngÃ¼ler performansÄ± dÃ¼ÅŸÃ¼rÃ¼r. Bazen kaÃ§Ä±nÄ±lamaz.
* Sorted Table kullanmak ve Parallel Cursor mantÄ±ÄŸÄ± ile performansÄ± artÄ±rabiliriz.
* Ã–rnek: BKPF ve BSEG tablolarÄ±nÄ± eÅŸleÅŸtirip kalemleri okumak
*--------------------------------------------------------------------*

DATA: BSEG_INDEX TYPE I,
      BKPF_READS TYPE I VALUE 0,
      BSEG_READS TYPE I VALUE 0.

BSEG_INDEX = 1.

LOOP AT BKPF_TAB INTO DATA(BKPF_LIN).
  BKPF_READS = BKPF_READS + 1.

  LOOP AT BSEG_TAB INTO DATA(BSEG_LIN) FROM BSEG_INDEX.
    IF BSEG_LIN-BUKRS <> BKPF_LIN-BUKRS OR
       BSEG_LIN-BELNR <> BKPF_LIN-BELNR OR
       BSEG_LIN-GJAHR <> BKPF_LIN-GJAHR.
       
       "FarklÄ± kayÄ±t geldi, index kaydedilir ve dÃ¶ngÃ¼den Ã§Ä±kÄ±lÄ±r
       BSEG_INDEX = SY-TABIX.
       EXIT.
    ELSE.
       "EÅŸleÅŸen kalem bulundu
       BSEG_READS = BSEG_READS + 1.
       WRITE: / 'Belge:', BKPF_LIN-BELNR,
               'Kalem:', BSEG_LIN-BUZEI,
               'Tutar:', BSEG_LIN-WRBTR.
    ENDIF.
  ENDLOOP.
ENDLOOP.

WRITE: / 'Toplam BKPF SatÄ±r SayÄ±sÄ±:', LINES(BKPF_TAB),
       / 'Toplam BSEG SatÄ±r SayÄ±sÄ±:', LINES(BSEG_TAB),
       / 'Toplam BKPF Okuma:', BKPF_READS,
       / 'Toplam BSEG Okuma:', BSEG_READS.

*--------------------------------------------------------------------*
* ğŸ”¹ Ã–zet:
*--------------------------------------------------------------------*
* - Sorted Table, verileri sÄ±ralÄ± tutar ve hÄ±zlÄ± arama saÄŸlar
* - Binary Search otomatik Ã§alÄ±ÅŸÄ±r
* - Tek bir kayÄ±t okumak iÃ§in WITH TABLE KEY kullanÄ±lÄ±r
* - Ä°Ã§ iÃ§e dÃ¶ngÃ¼lerde performans iÃ§in Parallel Cursor kullanÄ±lÄ±r
* - UNIQUE ve NON-UNIQUE KEY ile veri bÃ¼tÃ¼nlÃ¼ÄŸÃ¼ saÄŸlanÄ±r
*--------------------------------------------------------------------*
